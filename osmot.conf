##
## Top Level Options
## 

# Root directory where all files are located. Prepended to all paths.
#OSMOT_ROOT = /home/arxivsearch/osmot/
#OSMOT_ROOT = /home/SCILSNET/vmenkov/arxiv/arxiv/
OSMOT_ROOT = /data/arxiv/

# Set to true to turn on extra logging, false otherwise.
DEBUG = false
#DEBUG = true

# How often to reload the options file (in minutes)
#OPTIONS_LIFETIME = 30
OPTIONS_LIFETIME = 240

##
## Indexer Options
##

# The directory where the index is stored.
# Warning: If you're using a NutchSearcher, this must be the directory where 
# the subdirectories index and segments exist. I.e. this is the Nutch crawl
# directory.
#INDEX_DIRECTORY = /home/arxivsearch/arXiv-index/
INDEX_DIRECTORY = /data/arxiv/arXiv-index/

# The name of the unique identifier field (used to look up documents directly, 
# to name features, and more). We use the form Blah.xyz/1234567 
UNIQ_ID_FIELD = paper
#UNIQ_ID_FIELD = url

##
## Logger Options
##

# Place where the log files go.
LOG_DIRECTORY = log

# Prefix to log filenames 
LOG_PREFIX = osmotLog

# Log database information
LOG_DB = jdbc:mysql://127.0.0.1:3306/arxiv_xs
LOG_USER = arxiv
LOG_PWD = arXivLOG

# Set to "true" to make log records be output to standard error instead of 
# a log file (this is useful to debugging). Set it to "false" for regular
# logging.
LOG_STDERROR = false
#LOG_STDERROR = true

# Set to "true" if want to use LogAnalyzer to compare click probabilities 
# of pairs 0# to 01, #0 to 10, etc. If you only want to compare #0 to 0#,
# etc, then set it to false to get more data and tighter confidence bounds.
LOGGER_COMPARE50 = false

##
## Searcher Options
## 

# What type of searcher we should use (LuceneSearcher, NutchSearcher,
# ModelSearcher)
SEARCHER_TYPE = LuceneSearcher

# Number of results taken on each field for reranking, reordering, etc.
# Results past the number we get when we get the top this many on each
# field are taken straight from the base ranking function.
SEARCHER_NUM_FIELD_RESULTS = 200

# How often to reload the index in minutes. This is sort of
# slow, and takes the search engine down while the index is being
# reloaded. So only do it as often as the index is actually
# updated. 
SEARCHER_LIFETIME = 360
#SEARCHER_LIFETIME = 5 

# URL of the search engine
#-- VM: FIXME
SEARCHER_URL = http://search.arxiv.org:8081/

# Base URL for document links. This is the web page that records clicks 
# then forwards to the real URL. 
#SEARCHER_BASE_URL = details.jsp?r=
SEARCHER_BASE_URL = paper.jsp?r=

# Base visible URL for the document (ie what we show the user).
# If you don't want to prepend anything to the UniqId to make
# the visible URL (e.g. for NutchSearcher), set this to "null"
# or blank. You can't just skip the option.
#-- VM: FIXME
#- SEARCHER_BASE_VISIBLE_URL = http://arxiv.org/abs/


# To decide which mode to display to users, we do it probabilistically. The
# counts below show how often each mode should be used. The probability
# any one mode is selected is the weight of that mode divided by the total
# weight.
# 1a: Combine chains / nochains rerankings
SEARCHER_MODE_1a 0
# 1b: Combine chains reranking / no reranking
SEARCHER_MODE_1b 0
# 1c: Combine nochians reranking / no reranking
SEARCHER_MODE_1c 0
# 2a: Just nochains reranking
SEARCHER_MODE_2a 0
# 2b: Just chains reranking
SEARCHER_MODE_2b 0
# 2c: Just original results
SEARCHER_MODE_2c 0
# 3a: FairPairs, reranked with chains ranker, offset 0
SEARCHER_MODE_3a 0
# 3b: FairPairs, reranked with chains ranker, offset 1
SEARCHER_MODE_3b 0
# 4a: FairPairs4, reranked with chains ranker, offset 0
SEARCHER_MODE_4a 0
# 4b: FairPairs4, reranked with chains ranker, offset 1
SEARCHER_MODE_4b 0
# 4c: FairPairs4, reranked with chains ranker, offset 2
SEARCHER_MODE_4c 0
# 4d: FairPairs4, reranked with chains ranker, offset 3
SEARCHER_MODE_4d 0
# 5a: Unweighted search
SEARCHER_MODE_5a 0
# 5b: Unweighted search randomized
SEARCHER_MODE_5b 0
# 5c: original + unweighted
SEARCHER_MODE_5c 0
# 5d: unweighted + unweighted search randomized
SEARCHER_MODE_5d 0
# 5e: original + unweighted search randomized
SEARCHER_MODE_5e 0

# New way of making ranking worse
SEARCHER_MODE_6a 0
SEARCHER_MODE_6b 0
SEARCHER_MODE_6c 0
SEARCHER_MODE_6d 0
SEARCHER_MODE_6e 0
SEARCHER_MODE_6f 0

# 7a: Team game selection of 2c and 5a
SEARCHER_MODE_7a 0
# 7a: Team game selection of 5a and 5b
SEARCHER_MODE_7b 0
# 7a: Team game selection of 2c and 5b
SEARCHER_MODE_7c 0
# 7a: Team game selection of 2c and 6a
SEARCHER_MODE_7d 0
# 7a: Team game selection of 6a and 6b
SEARCHER_MODE_7e 0
# 7a: Team game selection of 2c and 6b
SEARCHER_MODE_7f 0

# 8a: Presentation selection of 2c and 5a
SEARCHER_MODE_8a 0
# 8b: Presentation selection of 2c and 5a
SEARCHER_MODE_8b 0
# 8c: Presentation selection of 2c and 5a
SEARCHER_MODE_8c 0
# 8d: Presentation selection of 2c and 5b
SEARCHER_MODE_8d 0


# 9a: boost title
SEARCHER_MODE_9a 1
# 9b: boost abstract
SEARCHER_MODE_9b 0
# 9c: boost article
SEARCHER_MODE_9c 0
# 9d: swap5 in 20
SEARCHER_MODE_9d 0
# 9e: swap5 in 20 for 9a
SEARCHER_MODE_9e 0
# 9f: swap5 in 20 for 9b
SEARCHER_MODE_9f 0
# 9g: swap5 in 20 for 9c
SEARCHER_MODE_9g 0
# 9h: flat
SEARCHER_MODE_9h 0

SEARCHER_MODE_90a 0
SEARCHER_MODE_90b 0
SEARCHER_MODE_90c 0
SEARCHER_MODE_90d 0
SEARCHER_MODE_90e 0
SEARCHER_MODE_90f 0
SEARCHER_MODE_90g 0
SEARCHER_MODE_90h 0

SEARCHER_MODE_9ab 0
SEARCHER_MODE_9ac 0
SEARCHER_MODE_9ad 0
SEARCHER_MODE_9ae 0
SEARCHER_MODE_9af 0
SEARCHER_MODE_9ag 0
SEARCHER_MODE_9ah 0

SEARCHER_MODE_9bc 0
SEARCHER_MODE_9bd 0
SEARCHER_MODE_9be 0
SEARCHER_MODE_9bf 0
SEARCHER_MODE_9bg 0
SEARCHER_MODE_9bh 0

SEARCHER_MODE_9cd 0
SEARCHER_MODE_9ce 0
SEARCHER_MODE_9cf 0
SEARCHER_MODE_9cg 0
SEARCHER_MODE_9ch 0

SEARCHER_MODE_9de 0
SEARCHER_MODE_9df 0
SEARCHER_MODE_9dg 0
SEARCHER_MODE_9dh 0

SEARCHER_MODE_9ef 0
SEARCHER_MODE_9eg 0
SEARCHER_MODE_9eh 0

SEARCHER_MODE_9fg 0
SEARCHER_MODE_9fh 0

SEARCHER_MODE_9gh 0

SEARCHER_MODE_Aa 0
SEARCHER_MODE_Ab 0
SEARCHER_MODE_Ac 0

SEARCHER_MODE_Bab 0
SEARCHER_MODE_Bac 0
SEARCHER_MODE_Bbc 0

SEARCHER_MODE_Aab 0
SEARCHER_MODE_Aac 0
SEARCHER_MODE_Abc 0


# dt: Sort by date
SEARCHER_MODE_dt 0

# Which field should we use to filter queries to make sure ALL the query
# words are present? We want to all words to be split across
# different fields, giving credit for partial matches on one field
# but at the same time every word has to be in at least one of the fields.
# So we use this field as a master filter.
SEARCHER_AND_FIELD = article

##
## Snippeter Options
##
## Note: Ignored by the NutchSearcher (it uses the snippets from Nutch)
##

# The fields to be used in snippets in order of preference.
SNIPPETER_FIELDS = abstract,comments,subj-class,acm-class,journal-ref
#SNIPPETER_FIELDS = content

# The length of the snippet (minimum, although this also bounds
# the maximum in a more complex way)
SNIPPETER_SNIPPET_LENGTH = 300
SNIPPETER_LONG_SNIPPET_LENGTH = 450

# The amount of context, in bytes, around query words to try to give.
SNIPPETER_CONTEXT_LENGTH = 60
SNIPPETER_LONG_CONTEXT_LENGTH = 90

# The amount of the document to look at (in bytes, from the
# cache) in generating snippets.
SNIPPETER_MAX_DOC_LENGTH = 2000000

# Plain text has < replaced with &lt; before collecting snippets
SNIPPETER_PLAIN_TEXT = true

##
## Reranker Options
##

# File name of reranker with query chains. 
#RERANKER_CHAINS_MODEL_FILE = Model_2006April19.TDF
#RERANKER_CHAINS_MODEL_FILE = simple.model
RERANKER_CHAINS_MODEL_FILE = null

# Set to true to have the LuceneSearcher use the original scores instead
# of original ranks when reranking (need to have trained the learner this
# way for this to make sense too). Make sure to set LEARNER_USE_SCORES
# to the same thing!
RERANKER_CHAINS_USE_SCORES = true

# Set to true if we only have one weight to multiply each field score
# by, otherwise assume there function is non-linear.
RERANKER_CHAINS_ONE_VALUE = true

# File name of reranker without query chains. 
#RERANKER_NOCHAINS_MODEL_FILE = Model_2006April21.NoTDFNoLimit
RERANKER_NOCHAINS_MODEL_FILE = null

# Set to true to have the LuceneSearcher use the original scores instead
# of original ranks when reranking (need to have trained the learner this
# way for this to make sense too). Make sure to set LEARNER_USE_SCORES
# to the same thing!
RERANKER_NOCHAINS_USE_SCORES = true

# Set to true if we only have one weight to multiply each field score
# by, otherwise assume there function is non-linear.
RERANKER_NOCHAINS_ONE_VALUE = false

# Name of file with feature names. 
RERANKER_FEATURE_FILE = features.index

##
## Cache Options
##

# The directory where the document cache (article bodies) is stored.
CACHE_DIRECTORY = /data/arxiv/arXiv-cache
# Cache for metadata/abstract xml files
METADATA_CACHE_DIRECTORY = /data/arxiv/arXiv-metadata-cache

# Sets the root for the input directory from which file bodies 
# (earlier transferred by FTP from osmot, or kindly uploaded
# by Paul Ginsparg) can be found. This is only used by ArxivImporter

# ARXIV_TEXT_DIRECTORY = /data/arxiv/arXiv-text
ARXIV_TEXT_DIRECTORY = /data/txt

# The default maximum length of documents returned from the cache. 
CACHE_DEFAULT_LENGTH = 1000000

# The directory where user profiles, suggestion lists, and other such
# files created via the TaskMaster are stored
DATAFILE_DIRECTORY = /data/arxiv/arXiv-data

##
## Indexer Options
##

# The maximum length of documents that we index. Longer documents return an 
# error when we try to index them.
INDEXER_MAX_LENGTH = 5000000

##
## Learner Options
##

# The value of wMin in the learning function. 
#LEARNER_WMIN = 0.002
LEARNER_WMIN = 0.02

# Path where svm_learn can be found (at least version 6.01)
#-- VM: FIXME
SVM_LEARN_PATH = /home/arxivsearch/svm_light/svm_learn

# Hard constraints are really soft constraints with high
# cost. This sets what the cost should be.
LEARNER_COST = 10000

# Which TOP-n features we use (these are the values of n, in order)
LEARNER_N_RANKS = 1,2,3,4,5,6,7,8,9,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100

# Click pattern to search for in the log files
#LEARNER_CLICK_PATTERN = p[a-z]{1,2}
LEARNER_CLICK_PATTERN = abs

# Set to true to have a single weight for the value of the score features
LEARNER_VALUE_FEATURES = false

# Set to disable Term/Document features
LEARNER_NO_TDF = false

# Use scores
LEARNER_USE_SCORES = true

LEARNER_USE_AGE = true
